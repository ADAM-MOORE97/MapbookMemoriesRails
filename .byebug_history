continue
current_user
continue
current_usercontinue
current_user
user_id
continue
current_user.locations
continue
current_user.locations
continue
current_user
continue
user_id
continue
user_id
continue
user_id
continue
user_id
continue
user_id[0].values[0]
user_id.values
user_id[0].values[0]
user_id[0].values
user_id[0].default
user_id[0].user_id
user_id[0][user_id]
user_id[user_id]
user_id[0][user_id]
user_id
user_id[0].user_id
user_id["user_id"]
user_id[0]
user_id
user_d
user_id=JWT.decode(cookie, jwt_key)
continue
user_id["user_id"]
user_id
continue
User.find_by(id: user_id)
continue
user_id
continue
User.find_by(id: user_id)
@current_user
user_id = JWT.decode(cookie, jwt_key).first["user_id"]
cookie
@current_user
continue
@current_user
current_user
User.find_by(id: user_id)
user_id
continue
@current_user
continue
user_id
continue
cookie
@current_user
params
continue
params
continue
user
continue
JWT.decode(cookie, jwt_key).first["user_id"]
decoded_token
continue
JWT.decode(cookie, jwt_key)
cookie
continue
blah
cookie
continue
cookie
continue
cookies.signed[:token]
continue
JWT.decode(cookie, jwt_key).first["user_id"]
JWT.decode(cookie, jwt_key, true, { :algorithm => 'HS256' }).first["user_id]
JWT.decode(cookie, jwt_key, true, { :algorithm => 'HS256' })
JWT.decode(cookie, jwt_key)[0][1]
JWT.decode(cookie, jwt_key)[:user_id]
JWT.decode(cookie, jwt_key)[0]
JWT.decode(cookie, jwt_key)["user_id"].to_i
JWT.decode(cookie, jwt_key)["user_id"]
   byebug
   JWT.decode(cookie, jwt_key)
    cookie = cookies.signed[:token]
  def current_user
JWT.decode(cookie, jwt_key)[0]
JWT.decode(cookie, jwt_key)[0].user_id
JWT.decode(cookie, jwt_key)
continue
JWT.decode(cookie, jwt_key, "HS256")
continue
JWT.decode(cookie, jwt_key, true, {"alg"=>"HS256"})
continue
JWT.decode(cookie, jwt_key)[0]
JWT.decode(cookie, jwt_key)
continue
cookie
continue
session[:user_id]
continue
cookies.signed[:token]
token
continue
cookies.signed[:token]
continue
token
continue
params
token
continue
token
continue
credential
credentials
params
continue
user
params
pparams
continue
params
paarams
params[:username]
user
continue
user
params
continue
params
continue
user.id
user
continue
@current_user
session
user
continue
session[:user_id]
continue
contninue
continue
loco = Location.find(3)
params
continue
loco
loco.update(visited: false)
loco = Location.find(3)
params.location_id
:location_id
params
continue
trip
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
formdata
params
continue
params
continue
params
continue
params
continue
params
continue
vontinue
session
continue
session
continue
session
continue
session
continue
session
continue
session
continue
session
continue
session
continue
q
session
params
continue
params[:session][:password]
session
current_user
@current_user
user
params[:session]
params
if user&.authenticate(params[:password])
session[:user_id]
session
user.id
q
session_id
session.delegate
session.@delegate
session
User.find_by(username: session[:username])
User.find_by(id: session[:user_id])
params
q
continue
session[:user_id]
session.user_id
@delegate
@current_user
session
user.id
:user_id
user.authenticate
session
quit
continue
@current_user = User.find_by(id: session[:user_id])
session[:user_id]
:user_id
@current_user
session
